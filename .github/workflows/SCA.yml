name: Veracode SCA Agent Demo
on: workflow_dispatch

jobs: 
  SCA: 
    name: Software Composition Analysis
    runs-on: ubuntu-latest
    env: 
        SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        SCAN_DIR: "./app"
    steps:
        - name: Check out branch
          uses: actions/checkout@v2
          
        # - name: Veracode Dependency Scanning
        #  run: |
        #      curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan --update-advisor
        #      echo $?
          
        - name: Veracode Dependency Scanning
          # You may pin to the exact commit or the version.
          # uses: veracode/veracode-sca@8f68e021ac444b5f873e4fb4311f924b0f904f57
          uses: veracode/veracode-sca@v2.1.6
          with:
            # Authorization token to query and create issues
            github_token: ${{ secrets.GH_TOKEN }} # default is ${{ github.token }} which when tested doesn't import
            # Run the SRCCLR with the `--quick` options
            #quick: # optional, default is false
            # Show update advisor
            update_advisor: true # optional, default is false
            # A git URL to work with in case the scan is not for the current repository
            # url: https://github.com/bnreplah/verademo-2/app # optional, default is 
            # An attribute to instruct the action to create an issue from found vulnerability or just simple text output
            create-issues: true # optional, default is false
            # A path within the repository where the build definition starts
            path: ./app # optional, default is .
            # Run the SRCCLR in debug mode
            debug: true # optional, default is false
            # Run the SRCCLR with the `--skip-collectors` options
            # skip-collectors: # optional, default is false
            # Run the SRCCLR with the `--allow-dirty` option
            # allow-dirty: # optional, default is false
            # Run the SRCCLR with the `--recursive` option
            # recursive: # optional, default is false
            # Run the SRCCLR with the `--skip-vms` option
            # skip-vms: # optional, default is false
